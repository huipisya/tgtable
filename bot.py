import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, ContextTypes, filters
import openpyxl
from openpyxl import Workbook
import os
import re # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ò–º—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
DATA_DIR = os.getenv('DATA_DIR', 'user_data')
os.makedirs(DATA_DIR, exist_ok=True)

# ID —á–∞—Ç–∞ –¥–ª—è –±—ç–∫–∞–ø–∞
BACKUP_CHAT_ID = os.getenv('BACKUP_CHAT_ID')

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è application
app = None

# --- –§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–´ –° –ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–´–ú–ò –§–ê–ô–õ–ê–ú–ò ---
# (–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ get_user_excel_file, init_user_excel, send_backup_for_user –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

def get_user_excel_file(user_id: int) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ Excel-—Ñ–∞–π–ª—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    return os.path.join(DATA_DIR, f'user_{user_id}.xlsx')

def init_user_excel(user_id: int):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç Excel-—Ñ–∞–π–ª –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç."""
    excel_file = get_user_excel_file(user_id)
    
    if not os.path.exists(excel_file):
        from openpyxl.styles import Font, PatternFill, Alignment, Border, Side
        
        wb = Workbook()
        ws = wb.active
        ws.title = "–ü–æ—Å—Ç—ã"
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏
        headers = ['‚Ññ', '–°—Å—ã–ª–∫–∞', '–°—Ç–∞—Ç—É—Å', '–î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è']
        ws.append(headers)
        
        # –°—Ç–∏–ª—å –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        header_fill = PatternFill(start_color="4472C4", end_color="4472C4", fill_type="solid")
        header_font = Font(bold=True, color="FFFFFF", size=12)
        alignment_center = Alignment(horizontal="center", vertical="center")
        
        thin_border = Border(
            left=Side(style='thin'),
            right=Side(style='thin'),
            top=Side(style='thin'),
            bottom=Side(style='thin')
        )
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª—å –∫ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º
        for cell in ws[1]:
            cell.fill = header_fill
            cell.font = header_font
            cell.alignment = alignment_center
            cell.border = thin_border
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Å—Ç–æ–ª–±—Ü–æ–≤
        ws.column_dimensions['A'].width = 8   # ‚Ññ
        ws.column_dimensions['B'].width = 60  # –°—Å—ã–ª–∫–∞
        ws.column_dimensions['C'].width = 20  # –°—Ç–∞—Ç—É—Å
        ws.column_dimensions['D'].width = 22  # –î–∞—Ç–∞
        
        wb.save(excel_file)
        logger.info(f"–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π Excel —Ñ–∞–π–ª –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

def send_backup_for_user(user_id: int):
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –±—ç–∫–∞–ø –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Ç."""
    if BACKUP_CHAT_ID:
        excel_file = get_user_excel_file(user_id)
        if os.path.exists(excel_file):
            try:
                import asyncio
                async def _send():
                    try:
                        with open(excel_file, 'rb') as f:
                            await app.bot.send_document(
                                chat_id=BACKUP_CHAT_ID,
                                document=f,
                                filename=f'backup_user_{user_id}_{datetime.now().strftime("%Y%m%d_%H%M%S")}.xlsx'
                            )
                        logger.info(f"–ë—ç–∫–∞–ø –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                    except Exception as e:
                        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –±—ç–∫–∞–ø–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")

                asyncio.create_task(_send())
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –±—ç–∫–∞–ø–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
        else:
            logger.warning(f"–§–∞–π–ª –¥–ª—è –±—ç–∫–∞–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")


# --- –û–ë–ù–û–í–õ–Å–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–´ –° EXCEL ---
# (–§—É–Ω–∫—Ü–∏–∏ get_next_number, add_post_to_excel, delete_post_from_excel, update_post_status –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

def get_next_number(user_id: int):
    excel_file = get_user_excel_file(user_id)
    if not os.path.exists(excel_file):
        init_user_excel(user_id)
    wb = openpyxl.load_workbook(excel_file)
    ws = wb.active
    return ws.max_row

def add_post_to_excel(user_id: int, link: str, status=None):
    from openpyxl.styles import Alignment, Border, Side
    
    excel_file = get_user_excel_file(user_id)
    if not os.path.exists(excel_file):
        init_user_excel(user_id)

    wb = openpyxl.load_workbook(excel_file)
    ws = wb.active
    row = ws.max_row + 1
    number = row - 1
    
    thin_border = Border(
        left=Side(style='thin'),
        right=Side(style='thin'),
        top=Side(style='thin'),
        bottom=Side(style='thin')
    )
    
    ws[f'A{row}'] = number
    ws[f'A{row}'].alignment = Alignment(horizontal="center", vertical="center")
    ws[f'A{row}'].border = thin_border
    
    ws[f'B{row}'].hyperlink = link
    ws[f'B{row}'].value = link
    ws[f'B{row}'].border = thin_border
    
    ws[f'C{row}'] = status if status else ""
    ws[f'C{row}'].alignment = Alignment(horizontal="center", vertical="center")
    ws[f'C{row}'].border = thin_border
    
    ws[f'D{row}'] = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    ws[f'D{row}'].alignment = Alignment(horizontal="center", vertical="center")
    ws[f'D{row}'].border = thin_border
    
    wb.save(excel_file)
    send_backup_for_user(user_id)
    return number

def delete_post_from_excel(user_id: int, link: str):
    excel_file = get_user_excel_file(user_id)
    if not os.path.exists(excel_file):
        logger.warning(f"–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        return False

    wb = openpyxl.load_workbook(excel_file)
    ws = wb.active
    deleted = False
    
    for row in range(2, ws.max_row + 1):
        if ws[f'B{row}'].value == link:
            ws.delete_rows(row)
            for i in range(row, ws.max_row + 1):
                ws[f'A{i}'] = i - 1
            wb.save(excel_file)
            deleted = True
            break
            
    if deleted:
        send_backup_for_user(user_id)
    
    return deleted

def update_post_status(user_id: int, link: str, status: str):
    excel_file = get_user_excel_file(user_id)
    if not os.path.exists(excel_file):
        logger.warning(f"–ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º —Ñ–∞–π–ª–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        return False

    wb = openpyxl.load_workbook(excel_file)
    ws = wb.active
    
    for row in range(2, ws.max_row + 1):
        if ws[f'B{row}'].value == link:
            ws[f'C{row}'] = status
            wb.save(excel_file)
            return True
    return False

def get_export_button():
    keyboard = [[InlineKeyboardButton("üìä –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö", callback_data='export_db')]]
    return InlineKeyboardMarkup(keyboard)

# --- –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –ò–ó–í–õ–ï–ß–ï–ù–ò–Ø –°–°–´–õ–û–ö ---

def extract_telegram_link(text: str) -> str:
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –ø–µ—Ä–≤—É—é –ø–æ–ø–∞–≤—à—É—é—Å—è —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç/–∫–∞–Ω–∞–ª –≤ Telegram –∏–∑ —Ç–µ–∫—Å—Ç–∞.
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç—ã: https://t.me/username/post_number, https://t.me/username
    """
    # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ Telegram-—Å—Å—ã–ª–æ–∫
    # https://t.me/username/12345 –∏–ª–∏ https://t.me/username
    # (?i) - –Ω–µ—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    # (?:...) - –Ω–µ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∞—è –≥—Ä—É–ø–ø–∞
    pattern = r'https?://(?:t\.me|telegram\.me)/(?:[a-zA-Z0-9_]+)(?:/[0-9]+)?(?:/[a-zA-Z0-9_]+)?'
    match = re.search(pattern, text)
    if match:
        return match.group(0)
    return ""

# --- –û–ë–ù–û–í–õ–Å–ù–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    init_user_excel(user_id)
    await update.message.reply_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {update.effective_user.first_name}! –Ø –±–æ—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤.\n\n"
        "–¢—ã –º–æ–∂–µ—à—å:\n"
        "1. –ü—Ä–æ—Å—Ç–æ *–ø–µ—Ä–µ—Å–ª–∞—Ç—å* –º–Ω–µ –ø–æ—Å—Ç –∏–∑ Telegram.\n"
        "2. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ *—Å—Å—ã–ª–∫—É* –Ω–∞ –ø–æ—Å—Ç –≤ Telegram.\n\n"
        "–Ø —Å–æ—Ö—Ä–∞–Ω—é –µ—ë –≤ *—Ç–≤–æ—é* –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.\n\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/export - –≤—ã–≥—Ä—É–∑–∏—Ç—å *—Ç–≤–æ—é* –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤ Excel\n"
        "/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ *—Ç–≤–æ–∏—Ö* –ø–æ—Å—Ç–æ–≤"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    init_user_excel(user_id)

    # --- –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ---
    forwarded_message = update.message.forward_from_message_id
    if forwarded_message:
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Å—Å—ã–ª–∫—É
        # –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, Bot API –Ω–µ –≤—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        # –ù–æ –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –∏–∑ –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã —Å username, —á–∞—Å—Ç–æ –º–æ–∂–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É.
        # –ë–æ–ª–µ–µ –Ω–∞–¥—ë–∂–Ω—ã–π —Å–ø–æ—Å–æ–± - —ç—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –≤ *—ç—Ç–æ–º* —Å–æ–æ–±—â–µ–Ω–∏–∏ (update.message) —Ç–µ–∫—Å—Ç –∏–ª–∏ caption,
        # –∏ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –∏–∑–≤–ª–µ—á—å –æ—Ç—Ç—É–¥–∞ —Å—Å—ã–ª–∫—É.
        # –û–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ *—Ç–æ–ª—å–∫–æ* –ø–µ—Ä–µ—Å–ª–∞–Ω–æ, –∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞ –≤ —Ç–µ–∫—É—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏, —Å–ª–æ–∂–Ω–æ.
        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—Å—Ç/–ø–æ–¥–ø–∏—Å—å —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å—Å—ã–ª–∫–∏.
        # –≠—Ç–æ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—Å–ª–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –¥–æ–±–∞–≤–∏–ª –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å —Å—Å—ã–ª–∫–æ–π.
        # –î–ª—è *—á–∏—Å—Ç–æ–π* –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è, Telegram API –Ω–µ –¥–∞—ë—Ç –ø—Ä—è–º–æ–π URL.
        # –ü–æ—ç—Ç–æ–º—É, –µ—Å–ª–∏ –≤ —Ç–µ–∫—É—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞/–ø–æ–¥–ø–∏—Å–∏, –º—ã –Ω–µ —Å–º–æ–∂–µ–º –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å *—Ç–æ–ª—å–∫–æ* –ø–µ—Ä–µ—Å—ã–ª–∫—É.
        # –ß—Ç–æ–±—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å *—Ç–æ–ª—å–∫–æ* –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã, –Ω—É–∂–Ω–æ –ø–æ–ª–∞–≥–∞—Ç—å—Å—è –Ω–∞ —Ç–æ, —á—Ç–æ –≤ –Ω–∏—Ö –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞,
        # –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∫–∞–Ω–∞–ª–∞ –ø–æ ID, —á—Ç–æ —Å–ª–æ–∂–Ω–æ –∏ —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤).
        # –£—á–∏—Ç—ã–≤–∞—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ Telegram, —á–∞—Å—Ç–æ —Å—Å—ã–ª–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –≤ —Ç–µ–ª–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –≤ –ø–æ–¥—Å–∫–∞–∑–∫–µ.
        # –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ —Ç–µ–∫—Å—Ç –∏–ª–∏ –ø–æ–¥–ø–∏—Å—å –≤ *—ç—Ç–æ–º* (—Ç–µ–∫—É—â–µ–º) —Å–æ–æ–±—â–µ–Ω–∏–∏, –∏ –µ—Å–ª–∏ –¥–∞, –∏–∑–≤–ª–µ—á—ë–º –æ—Ç—Ç—É–¥–∞ —Å—Å—ã–ª–∫—É.
        # Telegram —á–∞—Å—Ç–æ –≤—Å—Ç–∞–≤–ª—è–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ, –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ.
        # –ù–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç *–±–µ–∑* –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è, –∏ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ –±—ã–ª —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç, –∞ –Ω–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π URL,
        # —Ç–æ –≤ —Ç–µ–∫—É—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –±–æ—Ç–∞ –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å —Å—Å—ã–ª–∫–∏.
        # –í—ã–≤–æ–¥: –æ–±—Ä–∞–±–æ—Ç–∫–∞ *—á–∏—Å—Ç–æ–π* –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞/—Å—Å—ã–ª–∫–∏ –≤ —Ç–µ–∫—É—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ —á–µ—Ä–µ–∑ Bot API - –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞.
        # –ú—ã –º–æ–∂–µ–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø–µ—Ä–µ—Å—ã–ª–∫—É, –µ—Å–ª–∏ –≤ *—Ç–µ–∫—É—â–µ–º* —Å–æ–æ–±—â–µ–Ω–∏–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å—Å—ã–ª–∫—É.
        # –≠—Ç–æ –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Å–ª—É—á–∞–µ–≤, –æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º –∏–ª–∏ –µ—Å–ª–∏ Telegram –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É.

        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—Å—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        text = update.message.text or update.message.caption or ""
        if text:
            link = extract_telegram_link(text)
            if link:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                context.user_data['current_link'] = link
                # –í—ã–∑—ã–≤–∞–µ–º –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Å—ã–ª–∫–∏ (—Ç—É –∂–µ, —á—Ç–æ –∏ –¥–ª—è —Ç–µ–∫—Å—Ç–∞)
                await _present_link_options(update, context, link)
                return # –û–±—Ä–∞–±–æ—Ç–∞–ª–∏, –≤—ã—Ö–æ–¥–∏–º

    # --- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç –∏–ª–∏ –ø–æ–¥–ø–∏—Å—å —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ) ---
    text = update.message.text or update.message.caption or ""
    if text:
        link = extract_telegram_link(text)
        if link:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            context.user_data['current_link'] = link
            await _present_link_options(update, context, link)
            return # –û–±—Ä–∞–±–æ—Ç–∞–ª–∏, –≤—ã—Ö–æ–¥–∏–º

    # –ï—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞/—Å—Å—ã–ª–∫–∏, —Å–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if not forwarded_message and not text:
        await update.message.reply_text("‚ùå –Ø –Ω–µ –Ω–∞—à—ë–ª —Å—Å—ã–ª–∫—É –≤ —Ç–≤–æ—ë–º —Å–æ–æ–±—â–µ–Ω–∏–∏. –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –∏–ª–∏ –ø–µ—Ä–µ—à–ª–∏ –ø–æ—Å—Ç —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º —Å–æ–¥–µ—Ä–∂–∞—â–∏–º —Å—Å—ã–ª–∫—É.")
    elif not forwarded_message and text and not extract_telegram_link(text):
        await update.message.reply_text("‚ùå –Ø –Ω–µ –Ω–∞—à—ë–ª –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç –≤ Telegram –≤ —Ç–≤–æ—ë–º —Å–æ–æ–±—â–µ–Ω–∏–∏.")


# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ–ø—Ü–∏–π –ø–æ—Å–ª–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏
async def _present_link_options(update: Update, context: ContextTypes.DEFAULT_TYPE, link: str):
    """–ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏."""
    keyboard = [
        [InlineKeyboardButton("üìù –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç + —Å—Ç–∞—Ç—É—Å", callback_data='add_with_status')],
        [InlineKeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç", callback_data='delete_post')],
        [InlineKeyboardButton("‚úÖ –ü—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç", callback_data='add_simple')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        f"üìå –ü–æ—Å—Ç –ø–æ–ª—É—á–µ–Ω!\n\n–°—Å—ã–ª–∫–∞: {link}\n\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_markup
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ (–æ—Å—Ç–∞—ë—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id

    if query.data == 'export_db':
        excel_file = get_user_excel_file(user_id)
        if os.path.exists(excel_file):
            await query.message.reply_document(
                document=open(excel_file, 'rb'),
                filename=f'my_posts_{datetime.now().strftime("%Y%m%d_%H%M%S")}.xlsx'
            )
        else:
            await query.edit_message_text("‚ùå –¢–≤–æ—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞. –î–æ–±–∞–≤—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø–æ—Å—Ç.")
        return
    
    link = context.user_data.get('current_link')
    
    if not link:
        await query.edit_message_text("‚ùå –û—à–∏–±–∫–∞: —Å—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –∑–∞–Ω–æ–≤–æ.")
        return
    
    if query.data == 'add_simple':
        number = add_post_to_excel(user_id, link)
        await query.edit_message_text(
            f"‚úÖ –ü–æ—Å—Ç #{number} –¥–æ–±–∞–≤–ª–µ–Ω –≤ *—Ç–≤–æ—é* –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!\n\n"
            f"–°—Å—ã–ª–∫–∞: {link}",
            reply_markup=get_export_button()
        )
        context.user_data.clear()
        
    elif query.data == 'add_with_status':
        context.user_data['waiting_for_status'] = True
        await query.edit_message_text(
            f"üìù –í–≤–µ–¥–∏ —Å—Ç–∞—Ç—É—Å –¥–ª—è –ø–æ—Å—Ç–∞:\n\n{link}\n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: –û–¥–æ–±—Ä–µ–Ω–æ, –ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ, –û—Ç–∫–ª–æ–Ω–µ–Ω–æ –∏ —Ç.–¥."
        )
        
    elif query.data == 'delete_post':
        success = delete_post_from_excel(user_id, link)
        if success:
            await query.edit_message_text(
                f"üóëÔ∏è –ü–æ—Å—Ç —É–¥–∞–ª—ë–Ω –∏–∑ *—Ç–≤–æ–µ–π* –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!\n\n"
                f"–°—Å—ã–ª–∫–∞: {link}",
                reply_markup=get_export_button()
            )
        else:
            await query.edit_message_text(
                f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç. –í–æ–∑–º–æ–∂–Ω–æ, –µ–≥–æ —É–∂–µ –Ω–µ—Ç –≤ –±–∞–∑–µ.\n\n"
                f"–°—Å—ã–ª–∫–∞: {link}",
                reply_markup=get_export_button()
            )
        context.user_data.clear()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è —Å—Ç–∞—Ç—É—Å–∞) –∏ —Ç–µ–ø–µ—Ä—å —Ç–∞–∫–∂–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã—Ö
# –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text)
# –ó–∞–º–µ–Ω—è–µ–º –µ–≥–æ –Ω–∞ –±–æ–ª–µ–µ –æ–±—â–∏–π, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏ —Ç–µ–∫—Å—Ç, –∏ –ø–µ—Ä–µ—Å—ã–ª–∫–∏
# filters.TEXT –æ–∑–Ω–∞—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º
# filters.FORWARDED –æ–∑–Ω–∞—á–∞–µ—Ç –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–ª—é–±–æ–µ)
# –ú—ã —Ö–æ—Ç–∏–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å *–ª—é–±–æ–µ* —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –µ—Å—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞
# filters.TEXT –∏–ª–∏ filters.CAPTION (–¥–ª—è –º–µ–¥–∏–∞)
# filters.FORWARDED —Å–∞–º –ø–æ —Å–µ–±–µ –Ω–µ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤ —Ç–µ–∫—É—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç/—Å—Å—ã–ª–∫–∞
# –ù–∞–º –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å, –µ—Å—Ç—å –ª–∏ *–≤ —Ç–µ–∫—É—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏* —Ç–µ–∫—Å—Ç –∏–ª–∏ –ø–æ–¥–ø–∏—Å—å (caption)
# –ü–æ—ç—Ç–æ–º—É –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –≤—Å—ë, —á—Ç–æ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç –∏–ª–∏ –ø–æ–¥–ø–∏—Å—å
# MessageHandler(filters.TEXT | filters.CAPTION & ~filters.COMMAND, handle_message)
# –û–¥–Ω–∞–∫–æ filters.CAPTION —Å–∞–º –ø–æ —Å–µ–±–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ–∏–ª—å—Ç—Ä–æ–º –¥–ª—è MessageHandler.
# –ù—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å filters.UpdateType.MESSAGE –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–∞–ª–∏—á–∏–µ caption –∏–ª–∏ text –≤–Ω—É—Ç—Ä–∏.
# –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–±–∏–Ω–∞—Ü–∏—é —Ñ–∏–ª—å—Ç—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç, –µ—Å–ª–∏ *–µ—Å—Ç—å* —Ç–µ–∫—Å—Ç –∏–ª–∏ –ø–æ–¥–ø–∏—Å—å.
# filters.TEXT | filters.PHOTO & filters.caption (–Ω–∞–ø—Ä–∏–º–µ—Ä)
# –õ—É—á—à–µ –≤—Å–µ–≥–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –≤—Å—ë, —á—Ç–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞, –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤–Ω—É—Ç—Ä–∏.
# filters.TEXT —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å .text
# filters.PHOTO —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å .photo, –∏ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å .caption
# filters.VIDEO –∏ —Ç.–¥.
# filters.UpdateType.MESSAGE —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ–≥–¥–∞, –∫–æ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ.
# –ù–æ —Ñ–∏–ª—å—Ç—Ä—ã —Ç–∏–ø–∞ filters.TEXT –∏–¥—É—Ç –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ.
# filters.TEXT –æ–∑–Ω–∞—á–∞–µ—Ç –Ω–∞–ª–∏—á–∏–µ .text
# filters.CAPTION –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä MessageHandler
# filters.PHOTO & filters.CAPTION_TEXT (–Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è python-telegram-bot) –∏–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Ä—É—á–Ω—É—é.
# –í –≤–µ—Ä—Å–∏–∏ 20.8, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
# filters.PHOTO & filters.Caption.TEXT
# filters.VIDEO & filters.Caption.TEXT
# –ù–æ –ø—Ä–æ—â–µ –∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–µ–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Ä—É—á–Ω—É—é –≤–Ω—É—Ç—Ä–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞.
# –Ø –±—É–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å .text –ò–õ–ò .caption
# filters.TEXT –∏–ª–∏ filters.PHOTO (–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ caption –≤–Ω—É—Ç—Ä–∏), –∏–ª–∏ –æ–±—â–∏–π —Ñ–∏–ª—å—Ç—Ä –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω—É—Ç—Ä–∏.
# filters.TEXT | (filters.PHOTO & lambda u: hasattr(u.message, 'caption') and u.message.caption)
# filters.TEXT | filters.PHOTO | filters.VIDEO | ... –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–Ω—É—Ç—Ä–∏.
# –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ:
# MessageHandler((filters.TEXT | filters.PHOTO | filters.VIDEO | filters.AUDIO | filters.DOCUMENT) & ~filters.COMMAND, handle_message)
# –ò –≤–Ω—É—Ç—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å text –∏ caption.
# filters.TEXT —É–∂–µ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –Ω–∞–ª–∏—á–∏–µ .text
# filters.PHOTO –≤–∫–ª—é—á–∞–µ—Ç –Ω–∞–ª–∏—á–∏–µ .photo
# filters.CAPTION_TEXT (–Ω–æ–≤—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å) –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —É —Å–æ–æ–±—â–µ–Ω–∏—è –µ—Å—Ç—å –ø–æ–¥–ø–∏—Å—å (caption), –∏ –æ–Ω–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç.
# filters.TEXT
# filters.CAPTION = lambda u: u.effective_message.caption is not None
# filters.CAPTION_TEXT = filters.CAPTION & filters.TEXT
# filters.TEXT –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –µ—Å—Ç—å –ø–æ–ª–µ text (–∏ –æ–Ω–æ –Ω–µ None)
# filters.CAPTION –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –µ—Å—Ç—å –ø–æ–ª–µ caption (–∏ –æ–Ω–æ –Ω–µ None)
# filters.CAPTION_TEXT –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –µ—Å—Ç—å –ø–æ–ª–µ caption –ò –æ–Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç (–Ω–µ –ø—É—Å—Ç–æ–µ)
# filters.TEXT | filters.CAPTION_TEXT (–∏–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–¥–æ–±–Ω–æ–µ)
# filters.TEXT | (filters.CAPTION & filters.TEXT) # caption –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ caption, TEXT –≤–Ω—É—Ç—Ä–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
# filters.TEXT | filters.Caption.TEXT # (–µ—Å–ª–∏ Caption —Ä–µ–≥–∏—Å—Ç—Ä–æ–∑–∞–≤–∏—Å–∏–º)
# filters.TEXT | filters.CAPTION.TEXT # (CAPTION)
# filters.TEXT | filters.Caption.TEXT # (Caption)
# –ü—Ä–æ–≤–µ—Ä–∏–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏.
# –í –≤–µ—Ä—Å–∏–∏ 20.8:
# filters.TEXT
# filters.CAPTION
# filters.CAPTION.TEXT
# filters.TEXT | filters.CAPTION.TEXT
# filters.TEXT —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ .text –µ—Å—Ç—å –∏ –Ω–µ None
# filters.CAPTION.TEXT —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ .caption –µ—Å—Ç—å, –Ω–µ None –∏ –Ω–µ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
# –≠—Ç–æ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ.
# –ù–æ –µ—Å–ª–∏ –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è, –∏ –≤ —Ç–µ–∫—É—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–µ—Ç .text –∏ .caption,
# —Ç–æ –Ω–∏ –æ–¥–∏–Ω –∏–∑ —ç—Ç–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç.
# –ü–æ—ç—Ç–æ–º—É, —á—Ç–æ–±—ã *–ø–æ–π–º–∞—Ç—å* –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –¥–∞–∂–µ –µ—Å–ª–∏ –≤ –Ω—ë–º –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞/–ø–æ–¥–ø–∏—Å–∏,
# –Ω—É–∂–Ω–æ –ª–∏–±–æ –æ—Ç–¥–µ–ª—å–Ω–æ –ª–æ–≤–∏—Ç—å filters.FORWARDED, –ª–∏–±–æ –ª–æ–≤–∏—Ç—å –≤—Å—ë –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤–Ω—É—Ç—Ä–∏.
# –û–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ –≤ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–µ—Ç —Å—Å—ã–ª–∫–∏ (–Ω–∏ –≤ —Ç–µ–∫—Å—Ç–µ, –Ω–∏ –≤ –ø–æ–¥–ø–∏—Å–∏ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è),
# —Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –µ–≥–æ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ.
# –¶–µ–ª—å: –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å *–ª—é–±–æ–µ* —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º *–º–æ–∂–µ—Ç –±—ã—Ç—å* —Å—Å—ã–ª–∫–∞ –Ω–∞ Telegram-–ø–æ—Å—Ç.
# –≠—Ç–æ: —Å–æ–æ–±—â–µ–Ω–∏—è —Å .text, —Å–æ–æ–±—â–µ–Ω–∏—è —Å .caption, –∏, –∫–æ—Å–≤–µ–Ω–Ω–æ, –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –æ–Ω–∏ –¥–æ–±–∞–≤–∏–ª–∏ .text –∏–ª–∏ .caption.
# –ü–æ—ç—Ç–æ–º—É —Ñ–∏–ª—å—Ç—Ä TEXT | CAPTION.TEXT –¥–æ–ª–∂–µ–Ω –ø–æ–∫—Ä—ã—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–ª—É—á–∞–∏.
# filters.TEXT | filters.CAPTION.TEXT
# filters.CAPTION.TEXT —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω–æ filters.CAPTION & filters.TEXT
# filters.CAPTION –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ caption != None
# filters.TEXT –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ caption != ""
# filters.TEXT –ø—Ä–æ–≤–µ—Ä—è–µ—Ç .text
# filters.TEXT –ø—Ä–æ–≤–µ—Ä—è–µ—Ç .text (–¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞)
# filters.TEXT –ø—Ä–æ–≤–µ—Ä—è–µ—Ç .caption (–µ—Å–ª–∏ CAPTION —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
# –ù–µ—Ç, filters.TEXT –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–æ–ª—å–∫–æ .text.
# filters.CAPTION –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ .caption (–Ω–µ None)
# filters.TEXT –ø—Ä–æ–≤–µ—Ä—è–µ—Ç .text
# filters.CAPTION.TEXT = filters.CAPTION & lambda u: bool(u.effective_message.caption and u.effective_message.caption.strip())
# filters.TEXT = lambda u: bool(u.effective_message.text)
# filters.TEXT —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –µ—Å–ª–∏ .text –µ—Å—Ç—å –∏ –Ω–µ –ø—É—Å—Ç–æ–π/–Ω–µ None
# filters.CAPTION.TEXT —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –µ—Å–ª–∏ .caption –µ—Å—Ç—å –∏ –Ω–µ –ø—É—Å—Ç–æ–π/–Ω–µ None
# –≠—Ç–æ –ø–æ—á—Ç–∏ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ.
# filters.TEXT | filters.CAPTION.TEXT
# –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç: —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –µ—Å—Ç—å .text –∏–ª–∏ .caption (–∏ caption –Ω–µ –ø—É—Å—Ç–æ–π)
# –≠—Ç–æ –ø–æ–∫—Ä–æ–µ—Ç:
# - –°–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º (filters.TEXT)
# - –°–æ–æ–±—â–µ–Ω–∏—è —Å –º–µ–¥–∏–∞ –∏ –ø–æ–¥–ø–∏—Å—å—é (filters.CAPTION.TEXT)
# - –ü–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∏ –¥–æ–±–∞–≤–∏–ª–∏ —Ç–µ–∫—Å—Ç –∏–ª–∏ –ø–æ–¥–ø–∏—Å—å (—Ç–æ–∂–µ –±—É–¥–µ—Ç .text –∏–ª–∏ .caption)
# –≠—Ç–æ –¥–æ–ª–∂–Ω–æ —Å—Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤, –≤–∫–ª—é—á–∞—è –ø–µ—Ä–µ—Å—ã–ª–∫—É —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º.
# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å *—Ç—É–ø–æ* –ø–µ—Ä–µ—à–ª—ë—Ç –ø–æ—Å—Ç –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è, –∏ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ –Ω–µ –±—ã–ª–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–∏,
# —Ç–æ –≤ —Ç–µ–∫—É—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –±–æ—Ç–∞ .text –∏ .caption –±—É–¥—É—Ç None –∏–ª–∏ –ø—É—Å—Ç—ã–º–∏, –∏ —Ñ–∏–ª—å—Ç—Ä –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç.
# –≠—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Bot API.
# –ò—Ç–∞–∫, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–ª—å—Ç—Ä TEXT | CAPTION.TEXT

# --- –û–ë–ù–û–í–õ–Å–ù–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ---

async def handle_text_or_caption(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ –ø–æ–¥–ø–∏—Å—å—é, –≤–∫–ª—é—á–∞—è –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–µ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º."""
    user_id = update.effective_user.id
    init_user_excel(user_id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç –∏–ª–∏ –ø–æ–¥–ø–∏—Å—å —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    text = update.message.text or update.message.caption or ""
    if text:
        link = extract_telegram_link(text)
        if link:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            context.user_data['current_link'] = link
            await _present_link_options(update, context, link)
            return # –û–±—Ä–∞–±–æ—Ç–∞–ª–∏, –≤—ã—Ö–æ–¥–∏–º

    # –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    await update.message.reply_text("‚ùå –Ø –Ω–µ –Ω–∞—à—ë–ª –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç –≤ Telegram –≤ —Ç–≤–æ—ë–º —Å–æ–æ–±—â–µ–Ω–∏–∏. –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –∏–ª–∏ –ø–µ—Ä–µ—à–ª–∏ –ø–æ—Å—Ç —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º —Å–æ–¥–µ—Ä–∂–∞—â–∏–º —Å—Å—ã–ª–∫—É.")


# –≠–∫—Å–ø–æ—Ä—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–æ—Å—Ç–∞—ë—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
async def export_database(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    excel_file = get_user_excel_file(user_id)
    if os.path.exists(excel_file):
        await update.message.reply_document(
            document=open(excel_file, 'rb'),
            filename=f'my_posts_{datetime.now().strftime("%Y%m%d_%H%M%S")}.xlsx'
        )
    else:
        await update.message.reply_text("‚ùå –¢–≤–æ—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞. –î–æ–±–∞–≤—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø–æ—Å—Ç.")

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–æ—Å—Ç–∞—ë—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
async def stats(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    excel_file = get_user_excel_file(user_id)
    if not os.path.exists(excel_file):
        await update.message.reply_text("üìä –¢–≤–æ—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞.")
        return
    
    wb = openpyxl.load_workbook(excel_file)
    ws = wb.active
    total = ws.max_row - 1
    
    statuses = {}
    for row in range(2, ws.max_row + 1):
        status = ws[f'C{row}'].value
        if status:
            statuses[status] = statuses.get(status, 0) + 1
    
    message = f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ *—Ç–≤–æ–∏—Ö* –ø–æ—Å—Ç–æ–≤:\n\n"
    message += f"–í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {total}\n\n"
    
    if statuses:
        message += "–ü–æ —Å—Ç–∞—Ç—É—Å–∞–º:\n"
        for status, count in statuses.items():
            message += f"‚Ä¢ {status}: {count}\n"
    
    await update.message.reply_text(message)

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    global app

    TOKEN = os.getenv("BOT_TOKEN")
    
    if not TOKEN:
        logger.error("–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN")
        return

    app = Application.builder().token(TOKEN).job_queue(None).build()
    
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("export", export_database))
    app.add_handler(CommandHandler("stats", stats))
    app.add_handler(CallbackQueryHandler(button_handler))
    # –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫: –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ –ø–æ–¥–ø–∏—Å—å—é
    app.add_handler(MessageHandler((filters.TEXT | filters.CAPTION.TEXT) & ~filters.COMMAND, handle_text_or_caption))
    
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–µ—Å–ª–∏ –æ–Ω–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç —Å—Å—ã–ª–∫—É)!")
    app.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main()